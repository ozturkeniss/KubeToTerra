syntax = "proto3";

package order;

option go_package = "bweng/api/proto/order";

import "google/protobuf/timestamp.proto";

// Order service definition
service OrderService {
  // Create a new order
  rpc CreateOrder(CreateOrderRequest) returns (OrderResponse);
  
  // Get order by ID
  rpc GetOrderByID(GetOrderByIDRequest) returns (OrderResponse);
  
  // Get orders by user ID
  rpc GetOrdersByUserID(GetOrdersByUserIDRequest) returns (GetOrdersByUserIDResponse);
  
  // Get all orders
  rpc GetAllOrders(GetAllOrdersRequest) returns (GetAllOrdersResponse);
  
  // Update order status
  rpc UpdateOrderStatus(UpdateOrderStatusRequest) returns (OrderResponse);
  
  // Delete order
  rpc DeleteOrder(DeleteOrderRequest) returns (DeleteOrderResponse);
}

// Order message
message Order {
  uint64 id = 1;
  uint64 user_id = 2;
  string product_name = 3;
  double price = 4;
  int32 quantity = 5;
  OrderStatus status = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
}

// OrderStatus enum
enum OrderStatus {
  PENDING = 0;
  CONFIRMED = 1;
  SHIPPED = 2;
  DELIVERED = 3;
  CANCELLED = 4;
}

// CreateOrderRequest
message CreateOrderRequest {
  uint64 user_id = 1;
  string product_name = 2;
  double price = 3;
  int32 quantity = 4;
}

// GetOrderByIDRequest
message GetOrderByIDRequest {
  uint64 id = 1;
}

// GetOrdersByUserIDRequest
message GetOrdersByUserIDRequest {
  uint64 user_id = 1;
}

// GetOrdersByUserIDResponse
message GetOrdersByUserIDResponse {
  repeated Order orders = 1;
  string error = 2;
}

// GetAllOrdersRequest
message GetAllOrdersRequest {
  // Empty for now, can add pagination later
}

// GetAllOrdersResponse
message GetAllOrdersResponse {
  repeated Order orders = 1;
  string error = 2;
}

// UpdateOrderStatusRequest
message UpdateOrderStatusRequest {
  uint64 id = 1;
  OrderStatus status = 2;
}

// DeleteOrderRequest
message DeleteOrderRequest {
  uint64 id = 1;
}

// DeleteOrderResponse
message DeleteOrderResponse {
  bool success = 1;
  string message = 2;
}

// OrderResponse
message OrderResponse {
  Order order = 1;
  string error = 2;
} 